{"pageProps":{"id":"e098078f0874d05907b3bbdac951bda1","title":"react-native-webview加载第三方iframe","body":"### 1. 第三方iframe 遇到cross-origin问题\r\n[设置baseUrl与iframe的domain相同](https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#)\r\n```(javascript)\r\nconst ChatModal = ({ uuid, token, language, isLogin, dispatch, chatModal }) => {\r\n    const { shown } = chatModal;\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const closeModal = () => {\r\n        dispatch({\r\n            type: 'modal/closeChatModal',\r\n        });\r\n    };\r\n\r\n    const handleMessage = ({ nativeEvent }) => {\r\n        const data = nativeEvent.data;\r\n        if (data === 'close') {\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal animationType=\"fade\" transparent={false} visible={shown}>\r\n            <SafeAreaView style={styles.container}>\r\n                <WebView\r\n                    source={{ html: html, baseUrl: 'https://chat.sleekflow.io/' }}\r\n                    style={styles.webview}\r\n                    onMessage={handleMessage}\r\n                />\r\n            </SafeAreaView>\r\n        </Modal>\r\n    );\r\n};\r\n```\r\n### 2.  通过postMessage 向rn发送event\r\n```(javascript)\r\nrootWindow.ReactNativeWebView.postMessage('close'); \r\n```\r\n\r\n### 3. [react-native中调试js](https://github.com/react-native-webview/react-native-webview/blob/master/docs/Debugging.md#:~:text=Open%20Safari%20Preferences%20%2D%3E%20%22Advanced,you%20would%20on%20the%20web)\r\n### 3.1 ios中调试js\r\n\r\n1. Open Safari Preferences -> \"Advanced\" tab -> enable checkbox \"Show Develop menu in menu bar\"\r\n2. Start app with React Native WebView in iOS simulator or iOS device\r\n3. Safari -> Develop -> [device name] -> [app name] -> [url - title]\r\n4. You can now debug the WebView contents just as you would on the web\r\n\r\n### 3.2 android中调试js\r\n\r\n1. You will need to make the following change to MainApplication.java to enabled web contents debugging: \r\n```java\r\nimport android.webkit.WebView;\r\n\r\n  @Override\r\n  public void onCreate() {\r\n    super.onCreate();\r\n\t  ...\r\n    WebView.setWebContentsDebuggingEnabled(true);\r\n  }\r\n```\r\n2. Start app with React Native WebView in Android emulator or Android device\r\n3. Open chrome://inspect/#devices on Chrome\r\n4. Select your device on the left and select \"Inspect\" on the WebView contents you'd like to inspect\r\n5. You can now debug the WebView contents just as you would on the web\r\n\r\n### 4. html source code\r\n```(html)\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\r\n        <style>\r\n            html,body{\r\n                margin:0;\r\n                padding:0\r\n            }\r\n            #loading-overlay{\r\n                position:absolute;\r\n                width:100%;\r\n                height:100vh;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                z-index:2147483647;\r\n                background-color:white;\r\n            }\r\n            .lds-spinner {\r\n            color: official;\r\n            display: inline-block;\r\n            position: relative;\r\n            width: 80px;\r\n            height: 80px;\r\n            transform:scale(0.8)\r\n            }\r\n            .lds-spinner div {\r\n            transform-origin: 40px 40px;\r\n            animation: lds-spinner 1.2s linear infinite;\r\n            }\r\n            .lds-spinner div:after {\r\n            content: \" \";\r\n            display: block;\r\n            position: absolute;\r\n            top: 3px;\r\n            left: 37px;\r\n            width: 6px;\r\n            height: 18px;\r\n            border-radius: 20%;\r\n            background: blue;\r\n            }\r\n            .lds-spinner div:nth-child(1) {\r\n            transform: rotate(0deg);\r\n            animation-delay: -1.1s;\r\n            }\r\n            .lds-spinner div:nth-child(2) {\r\n            transform: rotate(30deg);\r\n            animation-delay: -1s;\r\n            }\r\n            .lds-spinner div:nth-child(3) {\r\n            transform: rotate(60deg);\r\n            animation-delay: -0.9s;\r\n            }\r\n            .lds-spinner div:nth-child(4) {\r\n            transform: rotate(90deg);\r\n            animation-delay: -0.8s;\r\n            }\r\n            .lds-spinner div:nth-child(5) {\r\n            transform: rotate(120deg);\r\n            animation-delay: -0.7s;\r\n            }\r\n            .lds-spinner div:nth-child(6) {\r\n            transform: rotate(150deg);\r\n            animation-delay: -0.6s;\r\n            }\r\n            .lds-spinner div:nth-child(7) {\r\n            transform: rotate(180deg);\r\n            animation-delay: -0.5s;\r\n            }\r\n            .lds-spinner div:nth-child(8) {\r\n            transform: rotate(210deg);\r\n            animation-delay: -0.4s;\r\n            }\r\n            .lds-spinner div:nth-child(9) {\r\n            transform: rotate(240deg);\r\n            animation-delay: -0.3s;\r\n            }\r\n            .lds-spinner div:nth-child(10) {\r\n            transform: rotate(270deg);\r\n            animation-delay: -0.2s;\r\n            }\r\n            .lds-spinner div:nth-child(11) {\r\n            transform: rotate(300deg);\r\n            animation-delay: -0.1s;\r\n            }\r\n            .lds-spinner div:nth-child(12) {\r\n            transform: rotate(330deg);\r\n            animation-delay: 0s;\r\n            }\r\n            @keyframes lds-spinner {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div id=\"loading-overlay\">\r\n            <div class=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </body>\r\n    <script \r\n        src=\"https://chat.sleekflow.io/embed_iframe.js\" \r\n        data-id=\"travischatwidget\"\r\n        data-companyid=\"e1922105-8004-4724-97c7-859b7ff5dedf\"\r\n        type=\"text/javascript\"\r\n    >\r\n    </script>\r\n    <script>\r\n        const rootWindow = window;\r\n        const loadingEle = document.querySelector('#loading-overlay') //loading\r\n\r\n        function start(){\r\n            function checkLoad(iframe){\r\n                const iframeWindow = iframe.contentWindow.window;\r\n                const rootIframeEle = iframeWindow.document.getElementById(\"travischatroot\");\r\n                const floatButton = rootIframeEle.querySelector(\"div>button\")\r\n                if(floatButton){\r\n                    floatButton.click();\r\n                    setTimeout(() => {\r\n                        loadingEle.remove();\r\n                        const closeButton = rootIframeEle.querySelector(\"#scrollConatiner>div>button\")\r\n                        if(closeButton){\r\n                            closeButton.onclick = function(e){\r\n                                e.stopPropagation()\r\n                                rootWindow.ReactNativeWebView.postMessage('close'); \r\n                            }\r\n                        }\r\n                    }, 500);\r\n                }else{\r\n                    setTimeout(function(){\r\n                        checkLoad(iframe);\r\n                    },500)\r\n                }\r\n            }\r\n\r\n            const iframeEle = document.querySelector('iframe#travischatwidget')\r\n            if(iframeEle){\r\n                iframeEle.addEventListener('load',function(){\r\n                    checkLoad(iframeEle)\r\n                })\r\n            }else{\r\n                setTimeout(function(){\r\n                    start()\r\n                },500)\r\n            }\r\n        }\r\n        \r\n        window.onload = function(){\r\n            start();\r\n        }\r\n    </script> \r\n</html>\r\n```\r\n\r\n","url":"https://github.com/gwl002/gwl002.github.io/issues/14","createdAt":"2022-04-11T14:40:39Z","tags":[{"name":"javascript","color":"1d76db"},{"name":"react-native","color":"5319e7"}],"headType":"article"},"__N_SSG":true}