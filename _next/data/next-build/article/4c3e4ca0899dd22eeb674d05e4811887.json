{"pageProps":{"id":"4c3e4ca0899dd22eeb674d05e4811887","title":"react-native下载pdf文件","body":"很久就实现过的功能，今天又遇到了，竟然无从下手，只好去翻翻旧代码并在这里记录一下也方便日后查看。\r\n\r\n# 需求分析\r\n- ajax请求pdf文件\r\n- 转成base64\r\n- 下载到手机，需要能从外部App打开\r\n\r\n### 1. 首先获取pdf文件二进制\r\n```jsx\r\nasync function getPdfBinary(url) {\r\n    return new Promise((resolve, reject) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.responseType = \"arraybuffer\"; // get the binary \r\n        xhr.setRequestHeader('content-type', 'application/json');\r\n        xhr.onload = function (event) {\r\n            var arrayBuffer = xhr.response;\r\n            var byteArray = new Uint8Array(arrayBuffer);\r\n            var len = byteArray.byteLength;\r\n            var binary = \"\"\r\n            for (var i = 0; i < len; i++) {\r\n                binary += String.fromCharCode(byteArray[i]);\r\n            }\r\n            resolve(binary);\r\n        }\r\n        xhr.send();\r\n    })\r\n}\r\n\r\n```\r\n### 2. 转成base64字符串\r\n```jsx\r\n//react-native 并没有btoa和atob方法 需要自己实现\r\nfunction base64_encode(str) {\r\n    var c1, c2, c3;\r\n    var base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    var i = 0,\r\n        len = str.length,\r\n        string = '';\r\n\r\n    while (i < len) {\r\n        c1 = str.charCodeAt(i++) & 0xff;\r\n        if (i == len) {\r\n            string += base64EncodeChars.charAt(c1 >> 2);\r\n            string += base64EncodeChars.charAt((c1 & 0x3) << 4);\r\n            string += \"==\";\r\n            break;\r\n        }\r\n        c2 = str.charCodeAt(i++);\r\n        if (i == len) {\r\n            string += base64EncodeChars.charAt(c1 >> 2);\r\n            string += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\r\n            string += base64EncodeChars.charAt((c2 & 0xF) << 2);\r\n            string += \"=\";\r\n            break;\r\n        }\r\n        c3 = str.charCodeAt(i++);\r\n        string += base64EncodeChars.charAt(c1 >> 2);\r\n        string += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\r\n        string += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));\r\n        string += base64EncodeChars.charAt(c3 & 0x3F)\r\n    }\r\n    return string\r\n}\r\n```\r\n### 3. 下载到android手机\r\n今天刚好在stackoverflow上回答别人的问题，他需要的是expo，所以写了个expo版本的。[Base64 String to pdf JavaScript React Native then download](https://stackoverflow.com/questions/68076316/base64-string-to-pdf-javascript-react-native-then-download/68076982#68076982)\r\nFor expo\r\n```jsx\r\nconst downloadForAos = async (pdfBase64Str) => {\r\n    const folder = FileSystem.StorageAccessFramework.getUriForDirectoryInRoot(\"test\");\r\n    const permissions = await FileSystem.StorageAccessFramework.requestDirectoryPermissionsAsync(folder);\r\n    if (!permissions.granted) return;\r\n\r\n    let filePath = await FileSystem.StorageAccessFramework.createFileAsync(permissions.directoryUri, \"test.pdf\", \"application/pdf\");\r\n    // let filePath = \"content://com.android.externalstorage.documents/tree/primary%3Atest/document/primary%3Atest%2Ftest.txt\";\r\n    console.log(pdfBase64Str, \"====\");\r\n    try {\r\n        await FileSystem.StorageAccessFramework.writeAsStringAsync(filePath, pdfBase64Str, { encoding: FileSystem.EncodingType.Base64 });\r\n        alert(\"download success!\")\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n```\r\nFor android\r\n``` jsx\r\nconst downloadForAos = async (pdfBase64Str) => {\r\n    const fileName = `/${Date.now()}_report.pdf`;\r\n    const path = RNFS.DownloadDirectoryPath + fileName;\r\n    try {\r\n        const granted = await PermissionsAndroid.request(\r\n            PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE,\r\n        );\r\n        if (granted) {\r\n            RNFS.writeFile(path, pdfBase64Str, \"base64\").then(res => {\r\n                ToastAndroid.show(I18n.t(\"myHealth.Downloaded\"), ToastAndroid.SHORT);\r\n            }).catch(error => {\r\n                ToastAndroid.show(I18n.t(\"myHealth.DownloadFailed\"), ToastAndroid.SHORT);\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.warn(err);\r\n    }\r\n}\r\n```\r\n### 4. 下载到ios手机\r\nios不能直接下载文件到外部app，只能通过分享到file app实现。找了很久没找到其他办法，有其他办法的大神请多多指教。\r\n```jsx\r\nconst downloadPdfForIos = async (pdf) => {\r\n    const url = \"data:application/pdf;base64,\" + pdf;\r\n    const shareOptions = {\r\n        title: 'image report',\r\n        failOnCancel: false,\r\n        saveToFiles: true,\r\n        url: url, // base64 with mimeType or path to local file\r\n    };\r\n    try {\r\n        const ShareResponse = await Share.open(shareOptions);\r\n        Alert.alert(\r\n            null,\r\n            I18n.t(\"myHealth.Downloaded\"),\r\n            [\r\n                {\r\n                    text: I18n.t(\"common.OK\"),\r\n                    onPress: () => null\r\n                }\r\n            ]\r\n        );\r\n    } catch (error) {\r\n        if (error.error && error.error.code === \"ECANCELLED500\") {\r\n            console.warn(\"canceled\");\r\n        } else {\r\n            Alert.alert(\r\n                null,\r\n                I18n.t(\"myHealth.DownloadFailed\"),\r\n                [\r\n                    {\r\n                        text: I18n.t(\"common.OK\"),\r\n                        onPress: () => null\r\n                    }\r\n                ]\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n","url":"https://github.com/gwl002/gwl002.github.io/issues/6","createdAt":"2021-06-22T12:55:44Z","tags":["react-native"],"headType":"article"},"__N_SSG":true}